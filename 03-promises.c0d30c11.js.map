{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,SAASC,iBAAiB,oBAAoB,WAuB5C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA/BaJ,SAASW,cAAc,SAE/BV,iBAAiB,UAAU,SAAUW,GAC/CA,EAAMC,iBAMN,IAJA,IAAMC,EAAaC,SAASC,KAAKC,SAASb,MAAMc,OAC1CC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,OACnCE,EAASL,SAASC,KAAKC,SAASG,OAAOF,OAEpCG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAG/BnB,EAAcmB,EAAI,EAFGP,EAAaO,EAAIF,GAGnCG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MACjBoB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAEvEwB,OAAM,SAAAL,G,IAAGpB,EAAQoB,EAARpB,SAAUC,EAAKmB,EAALnB,MAClBoB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const promiseForm = document.querySelector('.form');\n\n  promiseForm.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const firstDelay = parseInt(this.elements.delay.value);\n    const step = parseInt(this.elements.step.value);\n    const amount = parseInt(this.elements.amount.value);\n\n    for (let i = 0; i < amount; i++) {\n      const currentDelay = firstDelay + i * step;\n\n      createPromise(i + 1, currentDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }\n  });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n});"],"names":["$6JpON","parcelRequire","document","addEventListener","createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","querySelector","event","preventDefault","firstDelay","parseInt","this","elements","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.c0d30c11.js.map"}